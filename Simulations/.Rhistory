xlab("Simulations")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_blank(),
#axis.title.x=element_blank(),
axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
#strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
no_expr_all_2<-expr_2plot[!expr_2plot$isexpressed=="yes",]
no_expr_all_2$Read_Length<-factor(no_expr_all_2$Read_Length,levels=c("100","75","50"))
real_expr_all_2<-expr_2plot[!duplicated(expr_2plot[,c('SD.y', 'Sample.y')]),]
real_expr_all_2$Read_Length<-factor(real_expr_all_2$Read_Length,levels=c("100","75","50"))
no_expr_all_2$Type2<-factor(paste0(no_expr_all_2$Read_Length," ",no_expr_all_2$Type), levels=c("100 PE","100 SE","75 PE", "75 SE", "50 PE", "50 SE"))
real_expr_all_2$Type2<-factor(paste0(real_expr_all_2$Read_Length," ",real_expr_all_2$Type), levels=c("100 PE","100 SE","75 PE", "75 SE", "50 PE", "50 SE"))
ggplot(data=no_expr_all_2)+
geom_density(aes(Real_expression, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(Real_expression,  col=Read_Length), size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_linetype_manual(values="dashed",name="Real Expression")+
scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
stat_ecdf(pad=F,geom="step", aes(Real_expression, group=Read_Length,colour=Read_Length),size=0.8)+
stat_ecdf(data=real_expr_all_2, aes(Real_expression,  col=Read_Length), size=0.8,linetype="dotdash")+
scale_x_continuous(trans='log10',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_linetype_manual(values="dashed",name="Real Expression")+
xlab("Read Count (log)")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_density(aes(Real_expression,group=Type2, fill=Type2),col=NA , alpha=0.3)+
geom_density(data=real_expr_all_2, aes(real_expr_all_2$Real_expression,group=real_expr_all_2$Read_Length, col=real_expr_all_2$Read_Length),size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Real Expression")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_linetype_manual(values="dashed",name="ALV")+
scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_boxplot(aes(x=Sample.x, y=Real_expression, fill=Read_Length),col="grey30",lwd=0.01, outlier.size = 0.2)+
geom_boxplot(data=real_expr_all_2, aes(x=Read_Length, y=Real_expression,  col=Read_Length),lwd=0.05, outlier.size = 0.2)+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Read_Length, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
#axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none")
ggplot(data=no_expr_all_2)+
geom_violin(aes(x=Type2, y=Real_expression, fill=Type2, col=Type2), trim=FALSE, alpha=0.5)+
geom_boxplot(aes(x=Type2, y=Real_expression), color="grey30", lwd=0.3, width=0.1,outlier.size = 0.2)+
geom_violin(data=real_expr_all_2, aes(x=paste0(Type2,"real"), y=Real_expression,  col=Type2),trim=FALSE)+
geom_boxplot(data=real_expr_all_2, aes(x=paste0(Type2,"real"), y=Real_expression), color="grey30", lwd=0.3, width=0.1,outlier.size = 0.2)+
scale_color_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Type2, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
#panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none")
sapply(levels(no_expr_all_2$Type2), function(x){
real<-real_expr_all_2$Real_expression[real_expr_all_2$Type2==as.character(x)]
sim<-no_expr_all_2$Real_expression[no_expr_all_2$Type2==as.character(x)]
ks.test(sim,real,alternative ="two.sided", exact=F)
#wilcox.test(sim,real)
})
no_expr_all_2$sizes<-as.numeric(sapply(strsplit(as.character(no_expr_all_2$SD.x), "_", fixed=T),"[[",3))-as.numeric(sapply(strsplit(as.character(no_expr_all_2$SD.x), "_", fixed=T),"[[",2))
real_expr_all_2$sizes<-as.numeric(sapply(strsplit(as.character(real_expr_all_2$SD.x), "_", fixed=T),"[[",3))-as.numeric(sapply(strsplit(as.character(real_expr_all_2$SD.x), "_", fixed=T),"[[",2))
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
#scale_linetype_manual(values="dashed",name="Real Expression")+
scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Size Nts")+
ggtitle("Length of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes,group=Type2, fill=Type2),col=NA , alpha=0.3)+
geom_density(data=real_expr_all_2, aes(sizes,group=Read_Length), col="black",size=1,linetype="dashed")+
#scale_color_manual(values=plasma(5)[c(1,3,5)],name="Real Expression")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_linetype_manual(values="dashed",name="ALV")+
scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Size Nts")+
ggtitle("Length of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_boxplot(aes(x=Sample.x, y=sizes, fill=Read_Length),col="grey30",lwd=0.01, outlier.size = 0.2)+
geom_boxplot(data=real_expr_all_2, aes(x=Read_Length, y=sizes,  col=Read_Length),lwd=0.05, outlier.size = 0.2)+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Read_Length, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
#axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none")
ggplot(data=no_expr_all_2)+
geom_boxplot(aes(x=Sample.x, y=sizes, fill=Type2),col="grey30", lwd=0.01, outlier.size = 0.2)+
geom_boxplot(data=real_expr_all_2, aes(x=Type2, y=sizes,  col=Type2), lwd=0.05, outlier.size = 0.2)+
scale_color_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Type2, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
#axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none",
panel.background = element_rect(fill = "lightblue",
colour = "lightblue",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
plot.background = element_rect(fill = "lightblue")
)
ggplot(data=no_expr_all_2)+
geom_violin(aes(x=Type2, y=sizes, fill=Type2, col=Type2), trim=FALSE, alpha=0.5)+
geom_boxplot(aes(x=Type2, y=sizes), color="grey30", lwd=0.3, width=0.1,outlier.size = 0.2)+
geom_violin(data=real_expr_all_2, aes(x=paste0(Type2,"real"), y=sizes,  col=Type2),trim=FALSE)+
geom_boxplot(data=real_expr_all_2, aes(x=paste0(Type2,"real"), y=sizes), color="grey30", lwd=0.3, width=0.1,outlier.size = 0.2)+
scale_color_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Type2, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
#panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none")
setwd("/Users/luis_iniguez/Documents/GitHub/StarDust/Simulations/")
summary<-data.frame()
samples<-data.frame()
cov_all<-data.frame()
expr_all<-data.frame()
real_expr_all<-data.frame()
no_expr_all<-data.frame()
temp<-data.frame()
temp_ex<-data.frame()
temp_cov<-data.frame()
summary<- read.delim("summary.txt", stringsAsFactors = F)
samples<-read.delim("Samples.txt",stringsAsFactors = F)
temp<-samples
as.character(temp$Name)
temp_cov<-do.call(rbind,lapply(as.character(temp$Name), function(x){
data<-read.table(file.path(paste0("coverage_mod_",x,".bed")),stringsAsFactors =F)
IR<-IRanges(start = data[,2],end=data[,3])
coverage_temp<-table((IRanges:::unlist_as_integer(IR)))
cbind(relative_pos=names(coverage_temp),coverage=as.numeric(coverage_temp),type=paste(strsplit(as.character(x),"_")[[1]][c(4,5)],collapse="_"))
}))
cov_all<-rbind(cov_all,data.frame(relative_pos=as.numeric(temp_cov[,1]), coverage=as.numeric(temp_cov[,2]), type=as.factor(temp_cov[,3])))
head(cov_all)
expression<-read.table(file.path(paste0(temp$Name[1],"_count.txt")),row.names = NULL,stringsAsFactors =F)
colnames(expression)[2]<-temp$Name[1]
for (j in temp$Name[-1] ){
temp_ex<-read.table(file.path(paste0(j,"_count.txt")),row.names = NULL,stringsAsFactors =F)
colnames(temp_ex)[2]<-j
expression<-merge(temp_ex,expression,by=1,all=T)
}
row.names(expression)<-expression[,1]
expression<-expression[,-1]
colnames(expression)<-sapply(strsplit(colnames(expression),split = "_"),function(x){paste(x[1:5],collapse="_")})
sizes<-as.numeric(sapply(strsplit(rownames(expression), "_", fixed=T),"[[",3))-as.numeric(sapply(strsplit(rownames(expression), "_", fixed=T),"[[",2))
readleng<-as.numeric(sapply(strsplit(colnames(expression), "_", fixed=T),"[[",4))
expression<-t(t(expression)*readleng)/sizes
head(expression)
temp_ex<-do.call(rbind,lapply(as.character(temp$Name), function(x){
data<-read.table(file.path(paste0(as.character(x),"_count.txt")),row.names = NULL)
cbind(SD=data[,1],Expression=data[,2],Sample=x)
}))
temp_ex<-data.frame(SD=temp_ex[,1],Expression=as.numeric(temp_ex[,2]),Sample=as.factor(temp_ex[,3]))
expr_all<-rbind(expr_all,temp_ex)
head(expr_all)
dim(expr_all)
real_expr<-read.table("Read_Count_04022019_50.txt",row.names = NULL,stringsAsFactors =F)
colnames(real_expr)<-c("SD",as.vector(outer(c(1:10),"50",paste,sep="_")))
temp_ex<-read.table("Read_Count_04022019_75.txt",row.names = NULL,stringsAsFactors =F)
colnames(temp_ex)<-c("SD",as.vector(outer(c(1:10),"75",paste,sep="_")))
real_expr<-merge(real_expr,temp_ex,by="SD",all=T)
temp_ex<-read.table("Read_Count_04022019_100.txt",row.names = NULL,stringsAsFactors =F)
colnames(temp_ex)<-c("SD",as.vector(outer(c(1:10),"100",paste,sep="_")))
real_expr<-merge(real_expr,temp_ex,by="SD",all=T)
rownames(real_expr)<-real_expr$SD
real_expr<-real_expr[,-1]
sizes<-as.numeric(sapply(strsplit(rownames(real_expr), "_", fixed=T),"[[",3))-as.numeric(sapply(strsplit(rownames(real_expr), "_", fixed=T),"[[",2))
readleng<-as.numeric(sapply(strsplit(colnames(real_expr), "_", fixed=T),"[[",2))
real_expr_norm<-t(t(real_expr)*readleng)/sizes
head(real_expr_norm)
temp_ex<-do.call(rbind,lapply(colnames(real_expr), function(x){
data.frame(SD=rownames(real_expr),Real_expression=as.numeric(real_expr[,x]),Sample=x)
}))
real_expr_all<-rbind(real_expr_all,temp_ex)
head(real_expr_all)
threshold<-real_expr_norm/2 #un threshold o dependiente de expresion??
temp_ex<-do.call(rbind,sapply(colnames(expression),function(x){
temp_name<-paste(strsplit(x,"_")[[1]][c(3,4)],collapse = "_")
logic<-expression[,x]<threshold[,temp_name]
cbind(SD1=rownames(expression)[logic],SD2=rownames(real_expr_norm)[logic], realEXPR=real_expr_norm[logic,temp_name],simEXPR=expression[logic,x],samp=x)
}))
temp_ex<-data.frame(SD1=as.character(temp_ex[,1]),SD2=as.character(temp_ex[,2]),realEXPR=as.numeric(temp_ex[,3]),simEXPR=as.numeric(temp_ex[,4]),Name=as.factor(temp_ex[,5]))
no_expr_all<-rbind(no_expr_all,temp_ex)
head(no_expr_all)
dim(no_expr_all)
unique(no_expr_all$Name)
(no_expr_all$Name)
unique(no_expr_all$Name)
table(no_expr_all$SD1)
caca<-table(no_expr_all$SD1)
caca[caca==60]
length(caca[caca==60])
names(caca[caca==60])
head(no_expr_all)
head(real_expr_all)
head(real_expr_norm)
real_expr_norm["chr21_11837052_11841253",]
expr_all["chr21_11837052_11841253",]
expr_all[grep(expr_all$SD, pattern="chr21_11837052_11841253"),]
dim(real_expr_norm)
hist(sizes)
head(no_expr_all_2)
hist(unique(no_expr_all_2$sizes))
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)
head(real_expr_all_2)
dim(real_expr_all_2)
ggplot()+geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")
ggplot()+geom_density(data=real_expr_all_2[1:1000,], aes(sizes),col="black", size=1,linetype="dashed")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
#scale_linetype_manual(values="dashed",name="Real Expression")+
scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Size Nts")+
ggtitle("Length of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes, group=Read_Length, fill=Read_Length), col=NA,size=0.01, alpha=0.5)+
geom_density(data=real_expr_all_2, aes(sizes),col="black", size=1,linetype="dashed")+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
#scale_linetype_manual(values="dashed",name="Real Expression")+
#scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Size Nts")+
ggtitle("Length of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_density(aes(sizes,group=Type2, fill=Type2),col=NA , alpha=0.3)+
geom_density(data=real_expr_all_2, aes(sizes,group=Read_Length), col="black",size=1,linetype="dashed")+
#scale_color_manual(values=plasma(5)[c(1,3,5)],name="Real Expression")+
scale_fill_manual(values=plasma(10)[c(1,2,5,6,9,10)],name="Read Length")+
scale_linetype_manual(values="dashed",name="ALV")+
#scale_x_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
xlab("Size Nts")+
ggtitle("Length of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid.major = element_line(colour = "grey80"),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
#axis.ticks = element_blank(),
#axis.title.x=element_blank(),
#axis.text.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="bottom")
ggplot(data=no_expr_all_2)+
geom_boxplot(aes(x=Sample.x, y=sizes, fill=Read_Length),col="grey30",lwd=0.01, outlier.size = 0.2)+
geom_boxplot(data=real_expr_all_2, aes(x=Read_Length, y=sizes,  col=Read_Length),lwd=0.05, outlier.size = 0.2)+
scale_color_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
scale_fill_manual(values=plasma(5)[c(1,3,5)],name="Read Length")+
#scale_y_continuous(trans='log2',breaks = c(10,100,1000), minor_breaks = c(5,50,500))+
facet_grid(.~Read_Length, scale="free")+
xlab("Simulations")+
ylab("Read Count")+
ggtitle("Read Count of Not Detected")+
theme_bw() + theme( text = element_text(size=15),
panel.spacing = unit(0.001,"native"),
legend.text=element_text(size=10),
legend.title = element_text(size=12),
panel.grid = element_blank(),
panel.border = element_blank(),
#strip.text.y = element_text(angle = 0),
axis.ticks = element_line(colour = "grey80", size=0.05),
#axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.line = element_line(colour = "grey80", size=0.01),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank(),
strip.text.x = element_text(size=12),
strip.background = element_rect(colour="white",fill="gray80"),
legend.position="none")
sapply(levels(no_expr_all_2$Type2), function(x){
real<-real_expr_all_2$Real_expression[real_expr_all_2$Type2==as.character(x)]
sim<-no_expr_all_2$Real_expression[no_expr_all_2$Type2==as.character(x)]
ks.test(sim,real,alternative ="two.sided", exact=F)
#wilcox.test(sim,real)
})
sapply(levels(no_expr_all_2$Type2), function(x){
real<-real_expr_all_2$sizes[real_expr_all_2$Type2==as.character(x)]
sim<-no_expr_all_2$sizes[no_expr_all_2$Type2==as.character(x)]
#ks.test(sim,real)
wilcox.test(sim,real,alternative ="two.sided", exact=F)
})
sapply(levels(no_expr_all_2$Type2), function(x){
real<-real_expr_all_2$sizes[real_expr_all_2$Type2==as.character(x)]
sim<-no_expr_all_2$sizes[no_expr_all_2$Type2==as.character(x)]
ks.test(sim,real,alternative ="l", exact=F)
#wilcox.test(sim,real)
})
sapply(levels(no_expr_all_2$Type2), function(x){
real<-real_expr_all_2$sizes[real_expr_all_2$Type2==as.character(x)]
sim<-no_expr_all_2$sizes[no_expr_all_2$Type2==as.character(x)]
#ks.test(sim,real)
wilcox.test(sim,real,alternative ="g", exact=F)
})
head(real_expr)
head(expr_all)
